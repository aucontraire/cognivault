import logging
from cognivault.config.logging_config import setup_logging

setup_logging()
logger = logging.getLogger(__name__)
from cognivault.agents.historian.agent import HistorianAgent
from cognivault.context import AgentContext

import asyncio


async def run_historian(query: str) -> str:
    """
    Run the HistorianAgent with the given query asynchronously.

    Parameters
    ----------
    query : str
        The input query string to be processed by the HistorianAgent.

    Returns
    -------
    str
        The output string generated by the HistorianAgent.
    """
    agent = HistorianAgent()
    context = AgentContext(query=query)
    logger.info(f"[{agent.name}] Running agent with query: {query}")
    result = await agent.run(context)
    logger.info(
        f"[{agent.name}] Output: {result.agent_outputs.get(agent.name, '[No output]')}"
    )
    return result.agent_outputs.get(agent.name, "[No output]")


if __name__ == "__main__":  # pragma: no cover
    query = input("Enter a query: ").strip()
    output = asyncio.run(run_historian(query))
    print("\n🕵️ Historian Output:\n", output)
